# -*- coding: utf-8 -*-
"""Unit Test Assginment-Week 11

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jEQaHOflSSax_hOHnRvY4P9WEKqF5M4T

Below is the starting code that includes the data pipeline functions. You should focus on writing unit tests for these functions using the unittest framework.
"""

import unittest
import csv
import pandas as pd
from unittest.mock import patch

from google.colab import files
uploaded = files.upload()

def data_extraction(file_input):
    data = pd.read_csv('/billing_data.csv')
    return data

sample_data = data_extraction('/billing_data.csv')
print (sample_data)

len(sample_data)

def data_transformation(data):
    data = data.drop_duplicates()
    data['billing_amount'] = data['billing_amount'].str.replace('$', '').astype(float)
    data['total_charges'] = data['billing_amount'] + data['tax_amount']
    return data

def data_loading(data, output_file):
    data.to_csv(output_file, index=False)

# Your test data file path
data_file = 'billing_data.csv'
output_file = 'output_file.csv'

class TestDataPipeline(unittest.TestCase):

    def test_data_extraction(self):

        df = data_extraction(data_file)
        self.assertEqual(len(df), 5)
        self.assertIsInstance(df, pd.DataFrame)
        self.assertEqual(list(df.columns), ['customer_id', 'billing_amount', 'tax_amount'])


    def test_data_transformation(self):
        df = data_extraction(data_file)
        transformed_df = data_transformation(df)
        self.assertIsInstance(transformed_df, pd.DataFrame)
        self.assertListEqual(transformed_df.columns.tolist(),['customer_id', 'billing_amount', 'tax_amount', 'total_charges'])
        self.assertTrue(all(transformed_df['total_charges'].dtype == 'float'), )


    def test_data_loading(self):
        df = data_extraction(data_file)
        transformed_df = data_transformation(df)
        data_loading(transformed_df, output_file)
        self.assertTrue(os.path.exists(output_file))
        loaded_df = pd.read_csv(output_file)
        self.assertTrue(transformed_df.equals(loaded_df), )
        self.assertEqual(len(transformed_df), 3)

if __name__ == '__main__':
    unittest.main()